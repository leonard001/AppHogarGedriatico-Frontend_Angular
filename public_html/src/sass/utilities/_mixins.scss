/* MIXINS */

// MEDIAQUERIES
@mixin mq($media){
	@if type-of($media) == number {
		@if unitless($media) {
			@media only screen and (max-width: $media + px){
				@content;
			}
		}
	} @else {
		@if type-of(map-get($mediaqueries,$media)) == number {
			@media only screen and (max-width: map-get($mediaqueries,$media) + px){
				@content;
			}
		} @else if type-of(map-get($mediaqueries,$media)) == string {
			@media #{map-get($mediaqueries,$media)}{
				@content;
			}
		}
	}
}

// SUPPORTS
@mixin sp($supp){
	@if type-of(map-get($supports,$supp)) == string {
		@supports #{map-get($supports,$supp)}{
			@content;
		}
	}
}

// FLEXBOX
@mixin flex($jc: center, $ai: center, $fw: wrap, $d: flex){
	display: $d;
	justify-content: $jc;
	align-items: $ai;
	align-content: $ai;
	flex-wrap: $fw;
	@content;
}

// BG
@mixin bg($path, $size: contain){
	background: url("../../assets/img/#{$path}") no-repeat center;
	background-size: $size;
}

// ASPECT RATIO
@mixin aspectRatio($width, $height) {
	width: 100%;
	position: relative;
	&::before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> iframe {
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

// TRANSITIONS
@mixin transition($prop: all, $time: .3, $timing: ease){
	transition: $prop $time + s $timing;
	@content;
}

// CALL ANIMATION
@mixin animation($name, $time) {
	animation: $name linear $time;
	animation-iteration-count: infinite;
	transform-origin: 50% 50%;
	@content;
}

// PLACEHOLDER STYLES
@mixin optional-at-root($sel) {
	@at-root #{if(not &, $sel, selector-append(&, $sel))} {
		@content;
	}
}

@mixin placeholder {
	@include optional-at-root('::-webkit-input-placeholder') {
		@content;
	}
	@include optional-at-root(':-moz-placeholder') {
		@content;
	}
	@include optional-at-root('::-moz-placeholder') {
		@content;
	}
	@include optional-at-root(':-ms-input-placeholder') {
		@content;
	}
}

// CLEAR FLOAT
@mixin clear-b () {
	&::after,&::before{
		content: "";
		display: table;
		clear: both;
		width: 100%;
	}
}
.clear-b{
	@include clear-b;
}


// FONT SIZE

@mixin fontSize($size){
    font-size: ($size / $baseFont) + rem;
};
